// Nextflow configuration for nf-core/methylseq pipeline
// This configuration enables conda for local tool execution

// Disable Docker and enable conda
docker.enabled = false
conda.enabled = true

// Conda configuration
conda {
    enabled = true
    useMamba = false
    createTimeout = '1 h'
    cacheDir = "$HOME/.nextflow/conda"
}

// Process configuration
process {
    // Use conda environments for all processes
    conda = "${projectDir}/environment.yml"

    // Resource defaults
    cpus = 1
    memory = 4.GB
    time = 2.h

    // Error handling
    errorStrategy = 'retry'
    maxRetries = 2

    // Specific process overrides to limit CPU usage
    withName: 'NFCORE_METHYLSEQ:METHYLSEQ:TRIMGALORE' {
        cpus = 4
        memory = 8.GB
    }

    withName: 'NFCORE_METHYLSEQ:METHYLSEQ:FASTQ_ALIGN_DEDUP_BISMARK:BISMARK_ALIGN' {
        cpus = 4
        memory = 8.GB
    }

    withLabel: 'process_high' {
        cpus = 4
        memory = 8.GB
    }

    withLabel: 'process_medium' {
        cpus = 2
        memory = 6.GB
    }

    withLabel: 'process_low' {
        cpus = 1
        memory = 4.GB
    }
}

// Execution profiles
profiles {
    conda {
        conda.enabled = true
        docker.enabled = false
        singularity.enabled = false
        podman.enabled = false
        shifter.enabled = false
        charliecloud.enabled = false
    }

    test {
        includeConfig 'conf/test.config'
    }

    local {
        executor.name = 'local'
        executor.cpus = 8
        executor.memory = '16 GB'
    }
}

// Pipeline parameters
params {
    // Input/output options
    outdir = './results'
    
    // Reference genome options
    genome = null
    fasta = null
    
    // Trimming options
    clip_r1 = 0
    clip_r2 = 0
    three_prime_clip_r1 = 0
    three_prime_clip_r2 = 0
    
    // Alignment options
    aligner = 'bismark'
    
    // Methylation calling options
    cytosine_report = false
    relax_mismatches = false
    num_mismatches = 0.6
    
    // Output options
    save_reference = false
    save_trimmed = false
    save_align_intermeds = false
    
    // Skip options
    skip_trimming = false
    skip_deduplication = false
    skip_multiqc = false
    
    // Max resource options
    max_cpus = 8
    max_memory = '32.GB'
    max_time = '240.h'
}

// Manifest
manifest {
    name = 'nf-core/methylseq'
    author = 'Phil Ewels, Rickard HammarÃ©n'
    homePage = 'https://github.com/nf-core/methylseq'
    description = 'Methylation (Bisulfite-Sequencing) analysis pipeline using Bismark or bwa-meth + MethylDackel.'
    mainScript = 'main.nf'
    nextflowVersion = '>=21.10.3'
    version = '3.0.0'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
